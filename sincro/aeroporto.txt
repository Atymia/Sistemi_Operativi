Si consideri il seguente problema:
I passeggeri in transito in un aeroporto prima di imbarcarsi sull'aereo, devono superare i controlli di sicurezza.
I controlli sono gestiti come segue:
  Ogni passeggero sceglie tra N code quella più breve cui accodarsi ed attendere il proprio turno per passare il controllo.
  Ogni coda è gestita da un addetto che lascia passare il primo passeggero della coda, indirizzandolo verso una delle M code di accesso al metal detector.
  Ogni addetto indirizza il passeggero verso la coda più breve con lunghezza minore di K.
    Se il numero di code con lunghezza minore di K è inferiore a M/2, gli addetti non lasciano passare i passeggeri finchè persiste tale condizione.
Dopo aver attraversato il metal detector, il passeggero si dirige all'imbarco.

1.Scomposizione

Passeggeri : tra N code scelgono la piu' breve dove accodarsi e attendono il turno per il controllo. Attraversato il metal detector, si imbarcano.

Addetto: indirizza il primo passeggero della coda verso le M code di accesso al metal detector. Deve essere la piu' breve con lunghezza < K. Se il numero di code con lunghezza minore di K e' inferiore a M/2, gli addetti non lasciano passare finche' persiste tale condizione.

PASSEGGERO(){

     // scelta della coda piu' breve
     wait(mutex_CS); // accedo alla sezione critica
     min_coda = trova_coda_breve(code_controlli, N) // individuo la coda piu breve tra quelle disponibili
     code_controlli[min_coda]++ // aumento di uno la lunghezza della coda scelta, un nuovo passeggero si e' accodato
     signal(mutex_CS); // rilascio del semaforo, permettendo ad altri passeggeri di accedere alla CS

     // mi accodo alla coda scelta
     wait(controllo[min_coda]); // in attesa fino a che l'addetto non lascia passare

     // supero il controllo
     wait(mutex_CS);
     coda_controllo[min_coda]--; ho completato i controlli
     signal(mutex_CS);

     // accodo verso coda metal detector
     wait(mutex_CS);
     coda_metal_loc = trova_coda_breve(lunghezza_code_metal, M, K) // trova la coda di lunghezza M piu' breve minore di K
     lunghezza_code_metal[coda_metal_loc]++; //incremento la lunghezza della coda metal detector
     signal(mutex_CS);

     wait(coda_metal[coda_metal_loc]); // passeggero aspetta il suo turno per il metal detector

     // attraverso il metal detector
     wait(mutex_CS);
     lunghezza_code_metal[coda_metal_loc]--; // decremento la lunghezza della coda del metal detector per indicare che il passeggero e' passato
     signal(mutex_CS);

     {Procedi all'imbarco}
}


ADDETTO(){

     repeat

     wait(mutex_CS);
     code_brevi = conta_coda_brevi(lunghezza_code_metal, M, N, K); // conto le code con metal detector con lunghezza minore di K
     if(code_brevi < M/2){ // se il numero di code brevi e' inferiore a M/2
         signal(mutex_CS);
         wait(controllo_pausa);
     }else{
        signal(mutex_CS);
        signal(controllo_pausa); // sblocco altri addetti sospesi, se presenti
     }

     // lascio passare il passeggero
     wait(mutex_CS);
     coda_loc = trova_coda_breve(code_controlli, N) // trovo la coda con il primo passeggero
     signal(controllo[coda_loc]); // lascio passare il primo passeggero
     signal(mutex_CS);

     {Vai all'imbarco}

     forever
}
